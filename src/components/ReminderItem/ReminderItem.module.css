.reminderItem {
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  margin-bottom: var(--spacing-3);
  transition: all 0.15s ease;
  overflow: hidden;
}

.reminderItem:hover {
  border-color: var(--text-primary);
  box-shadow: var(--shadow);
}

.reminderItem.completed {
  opacity: 0.7;
}

.reminderItem.completed .title {
  text-decoration: line-through;
}

.reminderItem.overdue {
  border-left: 4px solid #dc2626;
  background: linear-gradient(90deg, #fef2f2 0%, var(--bg-secondary) 20%);
}

.reminderItem.upcoming {
  border-left: 4px solid #16a34a;
}

[data-theme="dark"] .reminderItem.overdue {
  background: linear-gradient(90deg, #450a0a 0%, var(--bg-secondary) 20%);
}

.mainContent {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-3);
  padding: var(--spacing-4);
}

.leftSection {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  flex-shrink: 0;
}

.completeButton {
  width: 20px;
  height: 20px;
  border: 2px solid var(--border-color);
  border-radius: 50%;
  background: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.15s ease;
  flex-shrink: 0;
}

.completeButton:hover {
  border-color: var(--text-primary);
}

.completeButton.completed {
  background: var(--text-primary);
  border-color: var(--text-primary);
  color: var(--bg-primary);
}

.statusIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
}

.contentSection {
  flex: 1;
  min-width: 0;
}

.titleRow {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: var(--spacing-3);
  margin-bottom: var(--spacing-2);
}

.title {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  line-height: 1.4;
  word-break: break-word;
}

.timeInfo {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: var(--spacing-1);
  flex-shrink: 0;
}

.reminderTime {
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--text-primary);
  background: var(--bg-primary);
  padding: var(--spacing-2) var(--spacing-3);
  border-radius: var(--radius-md);
  border: 1px solid var(--border-color);
  white-space: nowrap;
}

.reminderTime.overdue {
  background: #fee2e2;
  color: #dc2626;
  border-color: #fca5a5;
}

[data-theme="dark"] .reminderTime.overdue {
  background: #450a0a;
  color: #fca5a5;
  border-color: #7f1d1d;
}

.timeUntil {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
  font-style: italic;
}

.description {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  line-height: 1.5;
  margin: 0 0 var(--spacing-3) 0;
}

.linkedItem {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  padding: var(--spacing-2) var(--spacing-3);
  background: var(--bg-primary);
  border-radius: var(--radius-md);
  border: 1px solid var(--border-color);
  margin-bottom: var(--spacing-3);
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
}

.linkedItem svg {
  flex-shrink: 0;
}

.linkedText {
  font-weight: 500;
}

.metadata {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-4);
  margin-top: var(--spacing-2);
}

.metaItem {
  font-size: var(--font-size-xs);
  color: var(--text-secondary);
}

.actions {
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
  flex-shrink: 0;
  opacity: 0;
  transition: opacity 0.15s ease;
}

.reminderItem:hover .actions {
  opacity: 1;
}

.actionButton {
  padding: var(--spacing-2);
  color: var(--text-secondary);
}

.actionButton:hover {
  color: var(--text-primary);
}

.deleteButton:hover {
  color: #dc2626;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .mainContent {
    padding: var(--spacing-3);
  }
  
  .titleRow {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-2);
  }
  
  .timeInfo {
    align-items: flex-start;
    align-self: stretch;
  }
  
  .reminderTime {
    align-self: flex-start;
  }
  
  .actions {
    opacity: 1;
  }
  
  .metadata {
    flex-direction: column;
    gap: var(--spacing-2);
  }
}

@media (max-width: 480px) {
  .leftSection {
    flex-direction: column;
    align-items: center;
  }
  
  .linkedItem {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-1);
  }
}
